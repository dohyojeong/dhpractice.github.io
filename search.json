[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "My research topic is on Public Health Policy, Machine Learning, Geographic Information Science."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Research Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nVisualization\n\n\nRStudio\n\n\n\n\n\n\n\n\n\n\n\nDec 6, 2022\n\n\nDohyo Jeong\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nRStudio\n\n\nVisualization\n\n\n\n\n\n\n\n\n\n\n\nSep 27, 2022\n\n\nDohyo Jeong\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nRStudio\n\n\nVisualization\n\n\n\n\n\n\n\n\n\n\n\nSep 23, 2022\n\n\nDohyo Jeong\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nRStudio\n\n\nVisualization\n\n\n\n\n\n\n\n\n\n\n\nSep 15, 2022\n\n\nDohyo Jeong\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nHealth policy\n\n\nSpatial Analysis\n\n\n\n\n\n\n\n\n\n\n\nSep 3, 2022\n\n\nDohyo Jeong\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nHealth policy\n\n\nMachin Learning\n\n\n\n\n\n\n\n\n\n\n\nSep 2, 2022\n\n\nDohyo Jeong\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nText Mining\n\n\nHealth Policy\n\n\n\n\n\n\n\n\n\n\n\nSep 1, 2022\n\n\nDohyo Jeong\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nArcGIS\n\n\nHealth Policy\n\n\n\n\n\n\n\n\n\n\n\nJun 30, 2022\n\n\nDohyo Jeong\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Attacks on Healthcare/index.html",
    "href": "posts/Attacks on Healthcare/index.html",
    "title": "Attacks on Healthcare (Final Project)",
    "section": "",
    "text": "Team Project Data with Descriptive table and Mapping\n\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.0.5\n\n\nWarning: replacing previous import 'lifecycle::last_warnings' by\n'rlang::last_warnings' when loading 'pillar'\n\n\nWarning: replacing previous import 'lifecycle::last_warnings' by\n'rlang::last_warnings' when loading 'tibble'\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\n\ntotal_df <- read.csv(\"total_merge.csv\")\ntotal_df <- rename(total_df, c(region=ï..name))\n\n#df17 <- total_df %>% filter(year == 2017)\n#df18 <- total_df %>% filter(year == 2018)\n#df19 <- total_df %>% filter(year == 2019)\n#df20 <- total_df %>% filter(year == 2020)\n\nsummary(total_df)\n\n    region              code              code2                year     \n Length:868         Length:868         Length:868         Min.   :2017  \n Class :character   Class :character   Class :character   1st Qu.:2018  \n Mode  :character   Mode  :character   Mode  :character   Median :2018  \n                                                          Mean   :2018  \n                                                          3rd Qu.:2019  \n                                                          Max.   :2020  \n                                                                        \n      gdp                age            gender           edu        \n Min.   :   270.7   Min.   :47.32   Min.   :24.33   Min.   : 37.92  \n 1st Qu.:  2318.3   1st Qu.:59.48   1st Qu.:49.64   1st Qu.: 86.79  \n Median :  6185.9   Median :64.69   Median :50.27   Median : 96.24  \n Mean   : 16036.3   Mean   :63.67   Mean   :49.90   Mean   : 92.45  \n 3rd Qu.: 19105.4   3rd Qu.:67.51   3rd Qu.:51.00   3rd Qu.:101.40  \n Max.   :181709.3   Max.   :85.26   Max.   :54.56   Max.   :129.40  \n NA's   :62         NA's   :96      NA's   :96      NA's   :415     \n     urban            voice           stability            effect        \n Min.   : 12.71   Min.   :-2.2100   Min.   :-3.01000   Min.   :-2.48000  \n 1st Qu.: 42.39   1st Qu.:-0.8225   1st Qu.:-0.63000   1st Qu.:-0.68250  \n Median : 61.95   Median : 0.0400   Median : 0.03500   Median :-0.09000  \n Mean   : 61.06   Mean   :-0.0203   Mean   :-0.03262   Mean   :-0.02262  \n 3rd Qu.: 80.74   3rd Qu.: 0.8100   3rd Qu.: 0.81250   3rd Qu.: 0.58250  \n Max.   :100.00   Max.   : 1.7300   Max.   : 1.93000   Max.   : 2.34000  \n NA's   :12       NA's   :64        NA's   :64         NA's   :64        \n   regulatory            law             corruption            hdi        \n Min.   :-2.36000   Min.   :-2.35000   Min.   :-1.91000   Min.   :0.0000  \n 1st Qu.:-0.70000   1st Qu.:-0.72250   1st Qu.:-0.75250   1st Qu.:0.5960  \n Median :-0.11500   Median :-0.14000   Median :-0.18500   Median :0.7410  \n Mean   :-0.01456   Mean   :-0.01729   Mean   :-0.02391   Mean   :0.7074  \n 3rd Qu.: 0.63000   3rd Qu.: 0.62250   3rd Qu.: 0.64000   3rd Qu.:0.8353  \n Max.   : 2.23000   Max.   : 2.08000   Max.   : 2.27000   Max.   :0.9620  \n NA's   :64         NA's   :64         NA's   :64         NA's   :88      \n    hdilev              altlev         attlevl             attotal       \n Length:868         Min.   :0.0000   Length:868         Min.   :  0.000  \n Class :character   1st Qu.:0.0000   Class :character   1st Qu.:  0.000  \n Mode  :character   Median :0.0000   Mode  :character   Median :  0.000  \n                    Mean   :0.2523                      Mean   :  4.283  \n                    3rd Qu.:0.0000                      3rd Qu.:  0.000  \n                    Max.   :7.0000                      Max.   :577.000  \n                                                                         \n     atwork            atfaci           attrans            covid     \n Min.   :  0.000   Min.   :  0.000   Min.   : 0.0000   Min.   :0.00  \n 1st Qu.:  0.000   1st Qu.:  0.000   1st Qu.: 0.0000   1st Qu.:0.00  \n Median :  0.000   Median :  0.000   Median : 0.0000   Median :0.00  \n Mean   :  2.757   Mean   :  1.273   Mean   : 0.3064   Mean   :0.25  \n 3rd Qu.:  0.000   3rd Qu.:  0.000   3rd Qu.: 0.0000   3rd Qu.:0.25  \n Max.   :467.000   Max.   :244.000   Max.   :58.0000   Max.   :1.00  \n                                                                     \n     hdibi            inter             hdibi2           inter2       \n Min.   :0.0000   Min.   :0.00000   Min.   :0.0000   Min.   :0.00000  \n 1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000   1st Qu.:0.00000  \n Median :0.0000   Median :0.00000   Median :0.0000   Median :0.00000  \n Mean   :0.3979   Mean   :0.08756   Mean   :0.1846   Mean   :0.04147  \n 3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:0.0000   3rd Qu.:0.00000  \n Max.   :1.0000   Max.   :1.00000   Max.   :1.0000   Max.   :1.00000  \n NA's   :104                        NA's   :88                        \n     stabi            inter3            lat             long        \n Min.   :0.0000   Min.   :0.0000   Min.   : 0.00   Min.   :  1.167  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:12.42   1st Qu.: 18.375  \n Median :1.0000   Median :0.0000   Median :21.25   Median : 45.000  \n Mean   :0.5369   Mean   :0.1348   Mean   :25.42   Mean   : 56.235  \n 3rd Qu.:1.0000   3rd Qu.:0.0000   3rd Qu.:40.00   3rd Qu.: 80.000  \n Max.   :1.0000   Max.   :1.0000   Max.   :72.00   Max.   :178.000  \n                                   NA's   :20      NA's   :20       \n      lat2             long2        \n Min.   :-41.000   Min.   :-175.00  \n 1st Qu.:  4.375   1st Qu.: -11.62  \n Median : 17.292   Median :  20.00  \n Mean   : 19.195   Mean   :  19.37  \n 3rd Qu.: 39.625   3rd Qu.:  50.73  \n Max.   : 72.000   Max.   : 178.00  \n NA's   :20        NA's   :20       \n\nmapdata <- map_data(\"world\")\n\n#mapdata <- merge(mapdata, total_df,\n#              by.x = 'region',\n#              by.y = 'region')\n\n\nmapdata <- left_join(mapdata, total_df, by=\"region\")\n\nmapdata19 <- mapdata %>% filter(year == 2019)\nmapdata20 <- mapdata %>% filter(year == 2020)\n\n\n#mapdata1<-mapdata %>% filter(!is.na(mapdata$Perc_vaccinated))\n\n\nmap19 <- ggplot(mapdata19, aes( x = long.x, y = lat.x, group=group)) +\n  geom_polygon(aes(fill = altlev), color = \"black\") +\n  theme_classic() +\n  labs(title=\"Health care Attack 2019\",\n       subtitle = \"Before COVID-19\") +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  labs(fill = \"Attack level\") +\n  theme(legend.title = element_text(color = \"black\", size = 8))+\n  theme(legend.text = element_text(color = \"black\", size = 7))+\n  scale_fill_gradient2(low = \"yellow\", high = \"red\", na.value = NA, \n                       limits = c(0,7), breaks = c(0,1,2,3,4,5,6,7))\n\n\nmap20 <- ggplot(mapdata20, aes( x = long.x, y = lat.x, group=group)) +\n  geom_polygon(aes(fill = altlev), color = \"black\") +\n  theme_classic() +\n  labs(title=\"Health care Attack 2020\",\n      subtitle = \"After COVID-19\") +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  labs(fill = \"Attack level\") +\n  theme(legend.title = element_text(color = \"black\", size = 8))+\n  theme(legend.text = element_text(color = \"black\", size = 7))+\n  scale_fill_gradient2(low = \"yellow\", high = \"red\", na.value = NA, \n                        limits = c(0,7), breaks = c(0,1,2,3,4,5,6,7))\n\n\nmap19\n\n\n\nmap20\n\n\n\n\n\n\nResults of Difference in Difference\n\nlibrary(dplyr)\ntotal_df <- read.csv(\"total_merge.csv\")\n\ntotal_df <- rename(total_df, c(region=ï..name))\n\ntotal_df [, \"lngdp\"] <- log(total_df$gdp)\n\ntotal_df <- rename(total_df, c(COVID19=covid))\ntotal_df <- rename(total_df, c(HDI=hdibi2))\ntotal_df <- rename(total_df, c(DID=inter2))\ntotal_df <- rename(total_df, c(c.corruption=corruption))\ntotal_df <- rename(total_df, c(Attack=altlev))\n\n\ndid_hdi <- lm(data = total_df, Attack ~ COVID19 + HDI + DID +\n            voice + stability + regulatory + law + c.corruption + \n            lngdp + age + gender + edu + urban + lat + long)\nsummary(did_hdi)\n\n\nCall:\nlm(formula = Attack ~ COVID19 + HDI + DID + voice + stability + \n    regulatory + law + c.corruption + lngdp + age + gender + \n    edu + urban + lat + long, data = total_df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.9600 -0.1975 -0.0406  0.1263  3.3549 \n\nCoefficients:\n               Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  -0.4150989  0.7623674  -0.544 0.586409    \nCOVID19       0.0350438  0.0734686   0.477 0.633628    \nHDI           0.5095907  0.1204774   4.230  2.9e-05 ***\nDID           0.0189895  0.1631567   0.116 0.907403    \nvoice         0.1150309  0.0420264   2.737 0.006474 ** \nstability    -0.4824986  0.0446560 -10.805  < 2e-16 ***\nregulatory   -0.1396615  0.0688228  -2.029 0.043089 *  \nlaw           0.0191420  0.0975459   0.196 0.844525    \nc.corruption  0.0903721  0.0706032   1.280 0.201285    \nlngdp         0.1614957  0.0498187   3.242 0.001288 ** \nage          -0.0017242  0.0068019  -0.253 0.800024    \ngender       -0.0153286  0.0077231  -1.985 0.047851 *  \nedu          -0.0001637  0.0025119  -0.065 0.948085    \nurban        -0.0057935  0.0015349  -3.775 0.000184 ***\nlat           0.0062986  0.0019105   3.297 0.001065 ** \nlong          0.0024836  0.0007238   3.431 0.000663 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4472 on 401 degrees of freedom\n  (451 observations deleted due to missingness)\nMultiple R-squared:  0.3784,    Adjusted R-squared:  0.3551 \nF-statistic: 16.27 on 15 and 401 DF,  p-value: < 2.2e-16\n\n\n\n\nPloty graph\n\nlibrary(dplyr)\ntotal_df <- read.csv(\"total_merge.csv\")\ntotal_df <- rename(total_df, c(region=ï..name))\n\n\n#stability\nsummary(total_df)\n\n    region              code              code2                year     \n Length:868         Length:868         Length:868         Min.   :2017  \n Class :character   Class :character   Class :character   1st Qu.:2018  \n Mode  :character   Mode  :character   Mode  :character   Median :2018  \n                                                          Mean   :2018  \n                                                          3rd Qu.:2019  \n                                                          Max.   :2020  \n                                                                        \n      gdp                age            gender           edu        \n Min.   :   270.7   Min.   :47.32   Min.   :24.33   Min.   : 37.92  \n 1st Qu.:  2318.3   1st Qu.:59.48   1st Qu.:49.64   1st Qu.: 86.79  \n Median :  6185.9   Median :64.69   Median :50.27   Median : 96.24  \n Mean   : 16036.3   Mean   :63.67   Mean   :49.90   Mean   : 92.45  \n 3rd Qu.: 19105.4   3rd Qu.:67.51   3rd Qu.:51.00   3rd Qu.:101.40  \n Max.   :181709.3   Max.   :85.26   Max.   :54.56   Max.   :129.40  \n NA's   :62         NA's   :96      NA's   :96      NA's   :415     \n     urban            voice           stability            effect        \n Min.   : 12.71   Min.   :-2.2100   Min.   :-3.01000   Min.   :-2.48000  \n 1st Qu.: 42.39   1st Qu.:-0.8225   1st Qu.:-0.63000   1st Qu.:-0.68250  \n Median : 61.95   Median : 0.0400   Median : 0.03500   Median :-0.09000  \n Mean   : 61.06   Mean   :-0.0203   Mean   :-0.03262   Mean   :-0.02262  \n 3rd Qu.: 80.74   3rd Qu.: 0.8100   3rd Qu.: 0.81250   3rd Qu.: 0.58250  \n Max.   :100.00   Max.   : 1.7300   Max.   : 1.93000   Max.   : 2.34000  \n NA's   :12       NA's   :64        NA's   :64         NA's   :64        \n   regulatory            law             corruption            hdi        \n Min.   :-2.36000   Min.   :-2.35000   Min.   :-1.91000   Min.   :0.0000  \n 1st Qu.:-0.70000   1st Qu.:-0.72250   1st Qu.:-0.75250   1st Qu.:0.5960  \n Median :-0.11500   Median :-0.14000   Median :-0.18500   Median :0.7410  \n Mean   :-0.01456   Mean   :-0.01729   Mean   :-0.02391   Mean   :0.7074  \n 3rd Qu.: 0.63000   3rd Qu.: 0.62250   3rd Qu.: 0.64000   3rd Qu.:0.8353  \n Max.   : 2.23000   Max.   : 2.08000   Max.   : 2.27000   Max.   :0.9620  \n NA's   :64         NA's   :64         NA's   :64         NA's   :88      \n    hdilev              altlev         attlevl             attotal       \n Length:868         Min.   :0.0000   Length:868         Min.   :  0.000  \n Class :character   1st Qu.:0.0000   Class :character   1st Qu.:  0.000  \n Mode  :character   Median :0.0000   Mode  :character   Median :  0.000  \n                    Mean   :0.2523                      Mean   :  4.283  \n                    3rd Qu.:0.0000                      3rd Qu.:  0.000  \n                    Max.   :7.0000                      Max.   :577.000  \n                                                                         \n     atwork            atfaci           attrans            covid     \n Min.   :  0.000   Min.   :  0.000   Min.   : 0.0000   Min.   :0.00  \n 1st Qu.:  0.000   1st Qu.:  0.000   1st Qu.: 0.0000   1st Qu.:0.00  \n Median :  0.000   Median :  0.000   Median : 0.0000   Median :0.00  \n Mean   :  2.757   Mean   :  1.273   Mean   : 0.3064   Mean   :0.25  \n 3rd Qu.:  0.000   3rd Qu.:  0.000   3rd Qu.: 0.0000   3rd Qu.:0.25  \n Max.   :467.000   Max.   :244.000   Max.   :58.0000   Max.   :1.00  \n                                                                     \n     hdibi            inter             hdibi2           inter2       \n Min.   :0.0000   Min.   :0.00000   Min.   :0.0000   Min.   :0.00000  \n 1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000   1st Qu.:0.00000  \n Median :0.0000   Median :0.00000   Median :0.0000   Median :0.00000  \n Mean   :0.3979   Mean   :0.08756   Mean   :0.1846   Mean   :0.04147  \n 3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:0.0000   3rd Qu.:0.00000  \n Max.   :1.0000   Max.   :1.00000   Max.   :1.0000   Max.   :1.00000  \n NA's   :104                        NA's   :88                        \n     stabi            inter3            lat             long        \n Min.   :0.0000   Min.   :0.0000   Min.   : 0.00   Min.   :  1.167  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:12.42   1st Qu.: 18.375  \n Median :1.0000   Median :0.0000   Median :21.25   Median : 45.000  \n Mean   :0.5369   Mean   :0.1348   Mean   :25.42   Mean   : 56.235  \n 3rd Qu.:1.0000   3rd Qu.:0.0000   3rd Qu.:40.00   3rd Qu.: 80.000  \n Max.   :1.0000   Max.   :1.0000   Max.   :72.00   Max.   :178.000  \n                                   NA's   :20      NA's   :20       \n      lat2             long2        \n Min.   :-41.000   Min.   :-175.00  \n 1st Qu.:  4.375   1st Qu.: -11.62  \n Median : 17.292   Median :  20.00  \n Mean   : 19.195   Mean   :  19.37  \n 3rd Qu.: 39.625   3rd Qu.:  50.73  \n Max.   : 72.000   Max.   : 178.00  \n NA's   :20        NA's   :20       \n\ncleaned <- total_df\ncleaned <- rename(cleaned, c(HDI_level=hdilev))\ncleaned <- rename(cleaned, c(Number_Attack=attotal))\n\n\n\nlibrary(plotly) \n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\npar(las=1, mar=c(2, 2, 2, 2), cex=.7)\nfig <- plot_ly()%>%\n  add_trace(x = cleaned$gdp, y = cleaned$stability, \n            type = 'scatter', \n            size = cleaned$Number_Attack, color = cleaned$HDI_level,\n            text = ~paste(\"Country:\", cleaned$region, \"<br>Year:\", cleaned$year),\n            mode = 'markers')\nfig <- fig %>% layout(title = 'Analysis of Attacks, Stability, GDP, and HDI level',\n                      xaxis = list(showgrid = FALSE),\n                      yaxis = list(showgrid = FALSE),\n                      showlegend = TRUE)\n\nconfig(fig, scrollZoom = TRUE)%>%layout(plot_bgcolor='white',\n                                        xaxis = list(\n                                          zerolinecolor = 'gray3',\n                                          zerolinewidth = 2,\n                                          gridcolor = 'blue1'),\n                                        yaxis = list(\n                                          zerolinecolor = 'gray3',\n                                          zerolinewidth = 2,\n                                          gridcolor = 'blue1')\n)\n\nWarning: Ignoring 90 observations\n\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\n\n\n\n\nfig\n\nWarning: Ignoring 90 observations\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values.\n\nWarning: `line.width` does not currently support multiple values."
  },
  {
    "objectID": "posts/Compare the regression models/index.html",
    "href": "posts/Compare the regression models/index.html",
    "title": "Compare the Regression Models (assignmenmt3)",
    "section": "",
    "text": "Compare the regression models\n\n## Data Visualization\n## Sept 21 2022\n## Dohyo Jeong\n\nrm(list=ls()) \n\n## Anscombe (1973) Quartlet\n\ndata(anscombe)  # Load Anscombe's data\n\n# Create four model objects\nlm1 <- lm(y1 ~ x1, data=anscombe)\nlm2 <- lm(y2 ~ x2, data=anscombe)\nlm3 <- lm(y3 ~ x3, data=anscombe)\nlm4 <- lm(y4 ~ x4, data=anscombe)\n\n## Fancy version (per help file)\n\nff <- y ~ x\nmods <- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] <- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] <- as.name(paste0(\"y\", i))\n  ##      ff[[3]] <- as.name(paste0(\"x\", i))\n  mods[[i]] <- lmi <- lm(ff, data = anscombe)\n  print(anova(lmi))\n}\n\nAnalysis of Variance Table\n\nResponse: y1\n          Df Sum Sq Mean Sq F value  Pr(>F)   \nx1         1 27.510 27.5100   17.99 0.00217 **\nResiduals  9 13.763  1.5292                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y2\n          Df Sum Sq Mean Sq F value   Pr(>F)   \nx2         1 27.500 27.5000  17.966 0.002179 **\nResiduals  9 13.776  1.5307                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y3\n          Df Sum Sq Mean Sq F value   Pr(>F)   \nx3         1 27.470 27.4700  17.972 0.002176 **\nResiduals  9 13.756  1.5285                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y4\n          Df Sum Sq Mean Sq F value   Pr(>F)   \nx4         1 27.490 27.4900  18.003 0.002165 **\nResiduals  9 13.742  1.5269                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsapply(mods, coef)  # Note the use of this function\n\n                  lm1      lm2       lm3       lm4\n(Intercept) 3.0000909 3.000909 3.0024545 3.0017273\nx1          0.5000909 0.500000 0.4997273 0.4999091\n\nlapply(mods, function(fm) coef(summary(fm)))\n\n$lm1\n             Estimate Std. Error  t value    Pr(>|t|)\n(Intercept) 3.0000909  1.1247468 2.667348 0.025734051\nx1          0.5000909  0.1179055 4.241455 0.002169629\n\n$lm2\n            Estimate Std. Error  t value    Pr(>|t|)\n(Intercept) 3.000909  1.1253024 2.666758 0.025758941\nx2          0.500000  0.1179637 4.238590 0.002178816\n\n$lm3\n             Estimate Std. Error  t value    Pr(>|t|)\n(Intercept) 3.0024545  1.1244812 2.670080 0.025619109\nx3          0.4997273  0.1178777 4.239372 0.002176305\n\n$lm4\n             Estimate Std. Error  t value    Pr(>|t|)\n(Intercept) 3.0017273  1.1239211 2.670763 0.025590425\nx4          0.4999091  0.1178189 4.243028 0.002164602\n\n# Preparing for the plots\nop <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] <- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"blue\", pch = 21, bg = \"blue\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"red\", lwd = 1.5)\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\npar(op)\n\n\n\nExample of Overfitting with Finetune\n\nx <- seq(0, 2, by = 0.025)\ny <- 5 + 3*x^2 + 100*x^3 + rnorm(length(x), 0, 50)\nz <- x^2\n\nset.seed(2022)\n\nlinearmodel <- lm(y ~ x) #model fitting\n\ntestx <- seq(1.1, 1.5, by = 0.025)\ntesty <- 5 + 3*testx^2 + 100*(testx)^3 + rnorm(length(testx), 0, 20)\npredict_linear <- predict(linearmodel, list(x= testx)) #prediction on test data set\n\nquadraticmodel <- lm(y~ x + z) #fitting\npredict_quadratic = predict(quadraticmodel, list(x = testx, z = testx^2)) #prediction on test data set\n\nsmoothspline <- smooth.spline(x,y,df = 50) #fitting \npredict_spline <- predict(smoothspline, testx)$y #prediction on test data set\n\nseq <- seq(min(x), max(x), by = 0.001)\npredict <- predict(quadraticmodel, list(x = seq, z = seq^2))\n\npar(mfrow=c(1,1))\nplot(x,y, xlab = \"X\", ylab = \"Y\", main = \"Example of Overfitting with finetune\" )\nabline(linearmodel, col = \"red\", lwd = 1)\nlines(seq,predict, col = \"blue\", lwd = 2)\nlines(smoothspline, col = \"green\", lwd = 2)\n\n\n\n\n\n\nHappy Planet Index with ggplot\n\nhpi <- read.csv(\"HPI_GDP.csv\")\n\nlibrary(ggplot2)\n\nWarning: replacing previous import 'lifecycle::last_warnings' by\n'rlang::last_warnings' when loading 'tibble'\n\n\nWarning: replacing previous import 'lifecycle::last_warnings' by\n'rlang::last_warnings' when loading 'pillar'\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.0.5\n\n\nWarning: replacing previous import 'lifecycle::last_warnings' by\n'rlang::last_warnings' when loading 'hms'\n\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv tibble  3.1.4     v dplyr   1.0.7\nv tidyr   1.1.3     v stringr 1.4.0\nv readr   1.4.0     v forcats 0.5.1\nv purrr   0.3.4     \n\n\nWarning: package 'tibble' was built under R version 4.0.5\n\n\nWarning: package 'tidyr' was built under R version 4.0.5\n\n\nWarning: package 'dplyr' was built under R version 4.0.5\n\n\nWarning: package 'stringr' was built under R version 4.0.5\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\nhappy <- hpi %>% \n  filter(year == 2017) %>% \n  ggplot(aes(y = HPI, x = GDP, colour = Continent)) +\n  geom_point(alpha = 0.3) +\n  theme_bw() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_colour_brewer(palette = \"Set1\") +\n  labs(x = \"GDP per capita\",\n       y = \"Happy Index\",\n       title = \"Economics and Happy\",\n       subtitle = \"Happy Planet Index, 2017\",\n       caption = Sys.Date())\n\nhappy\n\n`geom_smooth()` using formula 'y ~ x'\n\n\nWarning: Removed 8 rows containing non-finite values (stat_smooth).\n\n\nWarning: Removed 8 rows containing missing values (geom_point)."
  },
  {
    "objectID": "posts/Covid19 and Educational Polarization/index.html",
    "href": "posts/Covid19 and Educational Polarization/index.html",
    "title": "Covid19 and Educational Polarization",
    "section": "",
    "text": "Coming soon…"
  },
  {
    "objectID": "posts/Data Visualization (assignmenmt2)/index.html",
    "href": "posts/Data Visualization (assignmenmt2)/index.html",
    "title": "Data Visualization (assignmenmt2)",
    "section": "",
    "text": "Using the happy planet data set\n\n\n#########################################\nrm(list=ls())                          # Clear environment\n\n\n\nhpi_df <- read.csv(\"HPI.csv\", header = TRUE)\n\ncolnames(hpi_df)<-c(\"hpi_rank\",\"country\",\"iso\",\"year\",\n                 \"continent\", \"population\", \"life_expectancy\",\n                 \"ladder_of_life\", \"ecological_footprint\",\n                 \"hpi\", \"biocapacity_for_year\", \"gdp\")\n\nhpi2_df <- na.omit(hpi_df)\n\n## Start plotting from basics \n#  plotting functions.\nyear <- c(2013, 2014, 2015, 2016, 2017, 2018, 2019)\nhpi_score <- aggregate(hpi ~ year, hpi2_df, mean)\nlife_score  <- aggregate(life_expectancy ~ year, hpi2_df, mean)\nhpi_score <- c(hpi_score$hpi)\nlife_score <- c(life_score$life_expectancy)\n\n# Setting the parameter (3 rows by 2 cols)\npar(mfrow=c(3, 2))\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \nplot.new()\nplot.window(range(year), c(40, 80))\nlines(year, hpi_score)\nlines(year, life_score)\npoints(year, hpi_score, pch=17, bg = \"blue\", cex=1) # Try different cex value?  \npoints(year, life_score, pch=21, bg =\"red\", cex=1)  # Different background color\npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\")\naxis(1, at=seq(2013, 2019, 2)) # What is the first number standing for?\naxis(2, at=seq(40, 80, 10))\naxis(4, at=seq(40, 80, 10))\nbox(bty=\"u\")\nmtext(\"year\", side=1, line=2, cex=0.8)\nmtext(\"HPI\", side=2, line=2, las=0, cex=0.8)\nmtext(\"Life Exp\", side=4, line=2, las=0, cex=0.8)\ntext(4, 5, \"Bird 131\")\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\")\n\n\n######## Histogram ########\n\n# Make sure no Y exceed [-3.5, 3.5]\npar(mar=c(4.5, 4.1, 3.1, 0))\nhist(hpi2_df$hpi, breaks=seq(floor(min(hpi2_df$hpi)),\n                             ceiling(max(hpi2_df$hpi))), \n     main=\"Height histogram\", xlab=\"HPI\", \n     col=\"gray80\", freq=FALSE)\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n\n####### Barplot ######\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.0.5\n\n\nWarning: replacing previous import 'lifecycle::last_warnings' by\n'rlang::last_warnings' when loading 'pillar'\n\n\nWarning: replacing previous import 'lifecycle::last_warnings' by\n'rlang::last_warnings' when loading 'tibble'\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nsummary(hpi2_df$gdp)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n   751.7   4984.0  12874.5  21034.2  31201.9 114304.0 \n\nhpi3_df <- hpi2_df %>%\n  mutate(gdp_lev = ifelse(hpi2_df$gdp >= 31202, 'high',\n                           ifelse(hpi2_df$gdp >= 4985, 'middle',\n                                  'low')))\n\nsummary(hpi2_df$hpi)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  22.35   38.32   44.24   44.05   49.88   64.73 \n\nhpi3_df <- hpi3_df %>%\n  mutate(hpi_lev = ifelse(hpi2_df$hpi > 49, 'good',\n                  ifelse(hpi2_df$hpi > 39, 'average',\n                         'bad')))\n\ngdp_sub_h <- subset(hpi3_df, gdp_lev == \"high\")\naggregate(gdp_lev ~ hpi_lev, gdp_sub_h, length)\n\n  hpi_lev gdp_lev\n1 average     122\n2     bad      50\n3    good      75\n\ngdp_sub_m <- subset(hpi3_df, gdp_lev == \"middle\")\naggregate(gdp_lev ~ hpi_lev, gdp_sub_m, length)\n\n  hpi_lev gdp_lev\n1 average     223\n2     bad      96\n3    good     175\n\ngdp_sub_l <- subset(hpi3_df, gdp_lev == \"low\")\naggregate(gdp_lev ~ hpi_lev, gdp_sub_l, length)\n\n  hpi_lev gdp_lev\n1 average      85\n2     bad     134\n3    good      28\n\nhpi_le <- c(\"average\", \"bad\", \"good\")\nhigh <- c(122, 50, 75)\nmiddle <- c(223, 96, 175)\nlow <- c(85, 134, 28)\n\nbar_df <- data.frame(high, middle, low)\nrownames(bar_df)=hpi_le\n\npar(mar=c(2, 3.1, 2, 2.1))\nmidpts <- barplot(as.matrix(bar_df), names = rep(\"\", 3),\n                  col = c(\"gray\", \"red\", \"blue\"))\nlegend(\"topright\", inset=.02,\n       c(\"average\",\"bad\", \"good\"), fill = c(\"gray\", \"red\", \"blue\"), \n       horiz=FALSE, cex=0.5)\nmtext(\"GDP per capita\", side=3, line=0.0, cex=0.5)\nmtext(sub(\" \", \"\\n\", colnames(bar_df)),\n      at=midpts, side=1, line=0.5, cex=0.5)\n\npar(mar=c(5.1, 4.1, 4.1, 2.1))  \n\n\n###### Boxplot ######\npar(mar=c(2, 4, 1, 0.5))\nboxplot(hpi3_df$hpi ~ hpi3_df$gdp_lev, data = hpi3_df,\n        boxwex = 0.4, at = 1:3 - 0.2,\n        subset= hpi3_df$hpi_lev == \"good\", col=\"blue\",\n        xlab=\"\",\n        ylab=\"HPI\", ylim=c(20,70))\nmtext(\"GDP per capita\", side=1, line=1.8, cex=0.5)\n\nboxplot(hpi3_df$hpi ~ hpi3_df$gdp_lev, data = hpi3_df, add = TRUE,\n        boxwex = 0.4, at = 1:3 + 0.2,\n        subset= hpi3_df$hpi_lev == \"bad\", col=\"red\")\nlegend(\"bottomleft\", inset=.02,\n       c(\"good\",\"bad\"), fill = c(\"blue\", \"red\"), horiz=TRUE, cex=0.5)\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n###### Persp ######\npar(mar=c(0.5, 0.5, 0, 0), lwd=0.5)\nx <- y <- seq(-10, 10, length = 50);\nz <- outer(x, y,\n           function(x,y) {\n             r <- sqrt(x^2 + y^2)+3;\n             cos(r)/r\n           });\n\npersp(x, y, z,\n      theta  = 20,        # Rotation about z-axis, in degrees\n      phi    = 30,        # Rotation about x-axis, in degrees\n      expand = 0.5,        # Shrinking/growing of z values\n      shade  = 0.3)\n\npar(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)\n\n\n# Piechart\npar(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)\npie.sales <- c(0.11, 0.06, 0.23, 0.11, 0.12, 0.37)\nnames(pie.sales) <- c(\"Africa\", \"Asia\",\n                      \"Europe\", \"Oceania\", \"Others\", \"S.America\")\npie(pie.sales, col = rainbow(7))"
  },
  {
    "objectID": "posts/Digital Mass Hysteria over COVID-19 vaccine/index.html",
    "href": "posts/Digital Mass Hysteria over COVID-19 vaccine/index.html",
    "title": "Digital Mass Hysteria over COVID-19 vaccine",
    "section": "",
    "text": "Coming soon…"
  },
  {
    "objectID": "posts/Echo Chamber and Policy Evaluation/index.html",
    "href": "posts/Echo Chamber and Policy Evaluation/index.html",
    "title": "Echo Chamber and Policy Evaluation",
    "section": "",
    "text": "Coming soon…"
  },
  {
    "objectID": "posts/Hackathon (Assignment 4)/index.html",
    "href": "posts/Hackathon (Assignment 4)/index.html",
    "title": "Hackathon (Assignment 4)",
    "section": "",
    "text": "Hackathon\n\nrm(list=ls())\n\nN<- read.csv(\"Sampling Example2.csv\")\nVoting <- N$Likeliness.you.will.vote\nGenre <- N$Music.Taste\nAge <- N$Age\nParty <- N$Political.Party...Liberal..0..Conservative..1.\n\nlibrary(ggplot2)\n\nWarning: replacing previous import 'lifecycle::last_warnings' by\n'rlang::last_warnings' when loading 'tibble'\n\n\nWarning: replacing previous import 'lifecycle::last_warnings' by\n'rlang::last_warnings' when loading 'pillar'\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.0.5\n\n\nWarning: replacing previous import 'lifecycle::last_warnings' by\n'rlang::last_warnings' when loading 'hms'\n\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv tibble  3.1.4     v dplyr   1.0.7\nv tidyr   1.1.3     v stringr 1.4.0\nv readr   1.4.0     v forcats 0.5.1\nv purrr   0.3.4     \n\n\nWarning: package 'tibble' was built under R version 4.0.5\n\n\nWarning: package 'tidyr' was built under R version 4.0.5\n\n\nWarning: package 'dplyr' was built under R version 4.0.5\n\n\nWarning: package 'stringr' was built under R version 4.0.5\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\nlibrary(viridis)\n\nWarning: package 'viridis' was built under R version 4.0.5\n\n\nLoading required package: viridisLite\n\n\nWarning: package 'viridisLite' was built under R version 4.0.5\n\nlibrary(gridExtra)\n\nWarning: package 'gridExtra' was built under R version 4.0.5\n\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\nlibrary(cowplot)\n\nWarning: package 'cowplot' was built under R version 4.0.5\n\np1<- ggplot(N,\n       aes(x=`Voting`,\n           ))+\n  geom_bar(position='dodge') +\n  scale_colour_brewer(palette = \"Set1\") +\n  theme_bw() +\n  labs(x = \"On a Scale of 1-to-5 How Likely Are You to Vote?\",\n       y = \"count\",\n       title = \"Likeliness of Voting\",\n       caption = Sys.Date())\np1\n\n\n\n\n\n#2\n\np2<- ggplot(N,\n            aes(x=`Genre`,\n            ))+\n  geom_bar(position='dodge') +\n  scale_colour_brewer(palette = \"Set1\") +\n  theme_bw() +\n  labs(x = \"Preferred Genre?\",\n       y = \"count\",\n       title = \"Genre\",\n       caption = Sys.Date())\n\np3<- ggplot(N,\n            aes(x=`Age`,\n            ))+\n  geom_bar(position='dodge') +\n  scale_colour_brewer(palette = \"Set1\") +\n  theme_bw() +\n  labs(x = \"How old are you?\",\n       y = \"count\",\n       title = \"Age\",\n       caption = Sys.Date())\n\n\n\nggdraw() +\n  draw_plot(p2, x = 0, y = .5, width = .5, height = .5) +\n  draw_plot(p3, x = .5, y = .5, width = .5, height = .5) +\n  draw_plot(p1, x = 0, y = 0, width = 1, height = 0.5) +\n  draw_plot_label(label = c(\"A\", \"B\", \"C\"), size = 8,\n                  x = c(0, 0.5, 0), y = c(1, 1, 0.5))\n\n\n\n\nGraph A\nIn terms of music genre, Latin and Pop music are the most preferred, followed closely by R & B, and Classical, while Country and Other genres have low preferences.\nGraph B\nThe age distribution indicates that most individuals are 55 years old, followed closely by individuals aged 31 years, 28 years, and 22 years respectively. The fewest individuals are aged 58 years, 26 years, and 24 years respectively. While other age groups are fairly distributed\nGraph C\nOn a scale of 1 to 5 where 1 indicates a strong disagreement to voting and 5 indicates a strong preference for voting, most respondents indicate their preference of being undecided to being not likely to vote, while those that indicate stronger preferences towards voting are fewer within the distribution.\nComparing graph C and Likeliness of voting\nGraph c and likeliness of voting are showing the same information but graph C uses shorter bars and the second graph uses longer bars. The graph that uses longer bars helps viewers to grasp the information more easily. Also, it shows the count more precisely and the difference between scales in more detail.\n\n\nType 1\nGraph#1\n\n### Data Visualization\n### Hackathon (assignment 4)\n### Dohyo Jeong\n### Sept/27/2022\n\n# Table 1\nN <- read.csv(\"samplingExample.csv\", header = TRUE)\n\ncolnames(N)<-c(\"Name\", \"Music Taste\", \"Likeliness of Voting\")\n\nlibrary(ggplot2)\nggplot(N,\n       aes(x=`Likeliness of Voting`,\n           fill=`Music Taste`))+\n  geom_bar(position='dodge') +\n  scale_colour_brewer(palette = \"Set1\") +\n  theme_bw() +\n  labs(x = \"On a Scale of 1-to-5 How Likely Are You to Vote?\",\n       y = \"count\",\n       title = \"Likeliness of Voting\",\n       caption = Sys.Date())\n\n\n\n\nGraph 1.\nPeople with music taste B are likely to vote more than people with music taste A, C.\nAlso, people with music taste B are more favorable to voting, and people with music taste A mostly voted for 1 and 2. Music taste C has no significant difference between the scales of likeliness of voting.\n\n\n\n\nGraph #2\n\n### Data Visualization\n### Hackathon (assignment 4)\n### Dohyo Jeong\n### Sept/27/2022\n\n# Table 2\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(viridis)\nlibrary(gridExtra)\nlibrary(cowplot)\n\nproperty_df <- read.csv(\"as4_data.csv\", header = TRUE)\ncolnames(property_df)<-c(\"nation\", \"year\", \"property\",\n                         \"corruption\", \"Developed\", \"Country\",\n                         \"corruption_lev\")\n\nproperty_df <- na.omit(property_df)\n\n\np1 <- property_df %>% \n  filter(year == 2009) %>% \n  ggplot(aes(y = property, x = corruption , colour = Country)) +\n  geom_point(alpha = 0.3) +\n  theme_bw() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_colour_brewer(palette = \"Set1\") +\n  labs(x = \"Political Corruption\",\n       y = \"Property Right\",\n       title = \"Relationship between Property Right and Corruption\",\n       subtitle = \"2009\",\n       caption = Sys.Date()) +\n  theme(legend.position = \"right\",\n        axis.title = element_text(size = 6),\n        title = element_text(size = 8),\n        legend.text = element_text(size = 6))\n\n\n####\np2 <- ggplot(property_df, aes(x = property_df$property))+\n  geom_density(aes(group = Country, fill = Country), alpha = 0.6) +\n  theme_bw() +\n  scale_fill_viridis(discrete = TRUE) +\n  scale_color_viridis(discrete = TRUE) +\n  labs(x = \"Property Right\",\n       y = \"Density\",\n       title = \"Property Right Distribution by Country\") +\n  theme(axis.title = element_text(size = 6),\n        title = element_text(size = 8),\n        legend.text = element_text(size = 6))\n\n####\npr_df <- property_df %>%\n  mutate(pro_lev = ifelse(property_df$property >= 70, 'high',\n                          ifelse(property_df$property >= 30, 'middle',\n                                 'low')))\n\np3 <- pr_df %>% \n  filter(year == 2009) %>%\n  ggplot(aes(x = pro_lev, fill = Country))+\n  geom_bar(position='identity') +\n  scale_colour_brewer(palette = \"Set1\") +\n  theme_bw() +\n  labs(x = \"Property Right\",\n       y = \"count\",\n       title = \"Property Right by country\") +\n  coord_flip() +\n  theme(axis.title = element_text(size = 6),\n        title = element_text(size = 8),\n        legend.text = element_text(size = 6))\n  \n####\n\nggdraw() +\n  draw_plot(p2, x = 0, y = .5, width = .5, height = .5) +\n  draw_plot(p3, x = .5, y = .5, width = .5, height = .5) +\n  draw_plot(p1, x = 0, y = 0, width = 1, height = 0.5) +\n  draw_plot_label(label = c(\"A\", \"B\", \"C\"), size = 8,\n                  x = c(0, 0.5, 0), y = c(1, 1, 0.5))\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\nGraph 2 (a)\nBased on the distribution of property rights, there is a significant mean difference between developed and developing countries. This implies that developed countries have more strict policies toward property rights and as countries become more developed there are higher chances that the country will protect their property rights.\nComparing graph 2(a) and 2(b)\nRegarding property rights by country, we see that a majority of developing nations have ‘middle’ level property rights; whereas, all developed nations have “high” level property rights. Additionally, developing states have varying degrees of property rights, with ‘high’ level rights being the lowest amount possessed, and ‘middle’ rights being the highest amount possessed. This graph supports the literature; where, developing nations lack the institutional structure to possess high-level property rights for its citizenry while developed nations hold the contrary to be true.\nAlso, it is more convenient to see the count between developed and developing countries via graph 2(B) but (A) shows more information such as the mean, variance, skewness, etc. This allows us to understand the property rights of developed and developing countries in more depth.\nGraph 2 (c).\nThis scatter plot with two lines shows the negative correlation between property rights and political corruption for both developed and developing countries. Based on the slope of the developed countries, it is shown that the correlation between property right and corruption is less sensitive, whereas the correlation between property right and corruption in developing countries have a stronger relationship. Moreover, blue dots are gathered around a higher political corruption rate, implying that developing countries tend to have higher political corruption than developed countries."
  },
  {
    "objectID": "posts/Tuberculosis Case Mapping/index.html",
    "href": "posts/Tuberculosis Case Mapping/index.html",
    "title": "Tuberculosis Case Mapping",
    "section": "",
    "text": "Coming soon…"
  }
]